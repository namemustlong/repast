<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.GoodDetailMapper">
  <resultMap id="BaseResultMap" type="com.common.model.GoodDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="old_price" jdbcType="REAL" property="oldPrice" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="max_num" jdbcType="INTEGER" property="maxNum" />
    <result column="min_num" jdbcType="INTEGER" property="minNum" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, name, old_price, price, description, stock_num, max_num, min_num, 
    info, img_url
  </sql>
  <select id="selectByExample" parameterType="com.common.model.GoodDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from good_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.common.model.GoodDetail">
    insert into good_detail ( category_id, name,
      old_price, price, description, 
      stock_num, max_num, min_num, 
      info, img_url)
    values ( #{categoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{oldPrice,jdbcType=REAL}, #{price,jdbcType=REAL}, #{description,jdbcType=VARCHAR}, 
      #{stockNum,jdbcType=INTEGER}, #{maxNum,jdbcType=INTEGER}, #{minNum,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.common.model.GoodDetail">
    insert into good_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="oldPrice != null">
        old_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="maxNum != null">
        max_num,
      </if>
      <if test="minNum != null">
        min_num,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        #{oldPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null">
        #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        #{minNum,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.common.model.GoodDetailExample" resultType="java.lang.Long">
    select count(*) from good_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.oldPrice != null">
        old_price = #{record.oldPrice,jdbcType=REAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.maxNum != null">
        max_num = #{record.maxNum,jdbcType=INTEGER},
      </if>
      <if test="record.minNum != null">
        min_num = #{record.minNum,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good_detail
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      old_price = #{record.oldPrice,jdbcType=REAL},
      price = #{record.price,jdbcType=REAL},
      description = #{record.description,jdbcType=VARCHAR},
      stock_num = #{record.stockNum,jdbcType=INTEGER},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      min_num = #{record.minNum,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.model.GoodDetail">
    update good_detail
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        old_price = #{oldPrice,jdbcType=REAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null">
        max_num = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="minNum != null">
        min_num = #{minNum,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.model.GoodDetail">
    update good_detail
    set category_id = #{categoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      old_price = #{oldPrice,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      description = #{description,jdbcType=VARCHAR},
      stock_num = #{stockNum,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      min_num = #{minNum,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>